{-

   Andreas Christian Olsen
   aco@acohimself.com

   https://adventofcode.com/2024/day/6

-}


module Main exposing (main)

import Browser
import Char
import Grid exposing (Grid, fromList, get, height, indexedMap, repeat, set, width)
import Html exposing (Html, a, button, div, form, h2, i, input, label, text, textarea)
import Html.Attributes exposing (action, class, for, placeholder, required, rows, style, type_)
import Html.Events exposing (onClick, onInput)
import List exposing (drop, filterMap, foldl, foldr, head, length, map, member, sum)
import Maybe exposing (Maybe, withDefault)
import String exposing (lines, split, toInt, toList, words)
import Tuple exposing (first, second)


title : String
title =
    "Day 6: Guard Gallivant"


type alias Model =
    { input : String
    , part1Value : Int
    , part2Value : Int
    }


initialModel : Model
initialModel =
    { input = ""
    , part1Value = 0
    , part2Value = 0
    }


type Msg
    = InputText String
    | Solve
    | LoadTestData
    | LoadRealData


type MapElement
    = Empty
    | Obstruction


type Direction
    = North
    | East
    | South
    | West


type alias Guard =
    { position : ( Int, Int )
    , direction : Direction
    }


type alias GuardRoute =
    Grid Bool


type alias GuardPath =
    List Guard


parse : String -> ( Grid MapElement, Guard )
parse s =
    let
        charToMapElement : Char -> MapElement
        charToMapElement c =
            case c of
                '#' ->
                    Obstruction

                _ ->
                    Empty

        parsedMap =
            s
                |> lines
                |> map toList
                |> map (map charToMapElement)
                |> fromList
                |> withDefault (repeat 1 1 Empty)

        guardPosition : Int -> List String -> ( Int, Int )
        guardPosition y line =
            case line of
                l :: ls ->
                    case String.indexes "^" l of
                        [] ->
                            guardPosition (y + 1) ls

                        guard :: _ ->
                            ( guard, y )

                _ ->
                    ( 0, 0 )
    in
    ( parsedMap, { position = guardPosition 0 <| lines s, direction = North } )


turn : Direction -> Direction
turn d =
    case d of
        North ->
            East

        East ->
            South

        South ->
            West

        West ->
            North


moveGuard : Grid MapElement -> Guard -> Maybe Guard
moveGuard m g =
    let
        newPos =
            case g.direction of
                North ->
                    ( first g.position, second g.position - 1 )

                East ->
                    ( first g.position + 1, second g.position )

                South ->
                    ( first g.position, second g.position + 1 )

                West ->
                    ( first g.position - 1, second g.position )
    in
    case get newPos m of
        Just Empty ->
            Just { g | position = newPos }

        Just Obstruction ->
            moveGuard m { g | direction = turn g.direction }

        Nothing ->
            Nothing


guardWalk : Grid MapElement -> Guard -> Grid Bool -> Grid Bool
guardWalk m g r =
    let
        newGuard =
            moveGuard m g
    in
    case newGuard of
        Nothing ->
            r

        Just moved ->
            guardWalk m moved (set moved.position True r)


part1 : String -> Int
part1 input =
    let
        ( parsedMap, guard ) =
            parse input

        emptyRoute =
            repeat (width parsedMap) (height parsedMap) False

        guardRoute =
            set guard.position True emptyRoute
    in
    guardWalk parsedMap guard guardRoute
        |> Grid.foldl
            (\p a ->
                if p then
                    a + 1

                else
                    a
            )
            0


part2 : String -> Int
part2 input =
    let
        ( parsedMap, guard ) =
            parse input

        emptyRoute =
            repeat (width parsedMap) (height parsedMap) False

        isLoop : GuardPath -> Guard -> Bool
        isLoop gp g =
            List.member g gp

        validateObPos g p m =
            let
                old =
                    get p m

                newMap =
                    set p Obstruction m
            in
            case old of
                Nothing ->
                    False

                Just Obstruction ->
                    False

                Just Empty ->
                    areWeInLoop (set p Obstruction m) g []

        areWeInLoop : Grid MapElement -> Guard -> GuardPath -> Bool
        areWeInLoop m g gp =
            case moveGuard m g of
                Nothing ->
                    False

                Just moved ->
                    if isLoop gp moved then
                        True

                    else
                        areWeInLoop m moved (moved :: gp)
    in
    -- check only where the guard walks
    guardWalk parsedMap guard emptyRoute
        |> indexedMap
            (\x y b ->
                if b then
                    validateObPos guard ( x, y ) parsedMap

                else
                    False
            )
        |> Grid.foldl
            (\p a ->
                if p then
                    a + 1

                else
                    a
            )
            0


update : Msg -> Model -> Model
update msg model =
    case msg of
        InputText text ->
            { model | input = text }

        Solve ->
            { model
                | part1Value = part1 model.input
                , part2Value = part2 model.input
            }

        LoadTestData ->
            { model | input = testData }

        LoadRealData ->
            { model | input = realData }


view : Model -> Html Msg
view model =
    div []
        [ div [ class "container" ]
            [ div [ class "w-1/2 mx-auto" ]
                [ h2 [ class "text-xl" ] [ text title ]
                ]
            , div [ class "flex space-x-8 justify-center" ]
                [ a
                    [ class "inline-block px-7 py-3 bg-blue-600 text-white font-medium text-sm leading-snug uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out"
                    , onClick LoadTestData
                    ]
                    [ text "Load small test data" ]
                , a
                    [ class "inline-block px-7 py-3 bg-blue-600 text-white font-medium text-sm leading-snug uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out"
                    , onClick LoadRealData
                    ]
                    [ text "Load the real data" ]
                , a
                    [ class "inline-block px-7 py-3 bg-blue-600 text-white font-medium text-sm leading-snug uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out"
                    , onClick Solve
                    ]
                    [ text "Find solutions" ]
                ]
            , form [ action "#" ]
                [ div [ class "mdl-textfield mdl-js-textfield", style "padding" "16px" ]
                    [ textarea
                        [ class "form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none"
                        , rows 3
                        , placeholder "Paste input text here"
                        , required True
                        , onInput InputText
                        ]
                        [ text model.input ]
                    ]
                , div [ class "flex space-x-8 justify-center" ]
                    [ div [ class "textarea_label" ] [ text "Part1: " ]
                    , text <| String.fromInt model.part1Value
                    , div [ class "textarea_label" ] [ text "Part2: " ]
                    , text <| String.fromInt model.part2Value
                    ]
                ]
            ]
        ]


main : Program () Model Msg
main =
    Browser.sandbox
        { init = initialModel
        , view = view
        , update = update
        }


testData : String
testData =
    """....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#..."""


realData : String
realData =
    """..........#..........#.#.......................................................................#...............#......#...#.......
........................................#..#..........#.........#..#..............................................................
.........#.......................................................................................................#................
..................................#.#..................................#..#.......#.....#.#............#.#........................
...#.......................................................#.........#...................#.................#......................
...............#.........#...........#................................................#..............#...........#.............#..
...................#..#..................................................................#........................................
........##..............................##................................#.....................#...#.............................
................................#...................#...........#.#...........................................................#...
......#......#...........................................#............................................#...#..#....#...............
............................#...#......#.....#.........#...#..#..............#....#...................#.........................#.
....................##.#........#.........#.............#......................#.#....#..............#........................#..#
#....................#......#..........#................................................................................#.........
..............#.............................................................#..........................#........#.....#..........#
.....................#........#......##.#.........#..........#.##.......................................#....#....................
................................................................#..#...........#.........#........................................
...............#..........#..#....#.#.#..................................#................................#..................#....
...................#....#.........................................................................................................
....#........................................................#......#......#.......................................#............#.
................................................#...#...........................................................#.................
..............#............................#.#.........................................#....#.....................................
...........#....#......#..................................................................#.....#..........#.............#.#......
...........................................#........#.#.........#.................#.....#.........................................
.............#.........#.........................#......#.....................#.#.................................................
.............#.....#................#...................................................#.........................................
..#....#............#................#...........................#..................#............#................................
#............................................................#......#..................................#...............#.......#..
.........................#...#.................................................................#..#...........................#..#
.................#.......................................#...............................#...#...#............#..........#........
......................#.........#...............#......#................................#.#....#.......#..........................
.#......##.................................#.................#...#.................#............................................#.
..#..................#.....#.#......#................................#..#...#......##....#..........#..................#..........
.................................................................................#...................................#............
..............................#..#...............................#....#.............................#.......#..................#..
..........#........#.....................................#..............#.....#..#................#........#.#..................#.
....................................#....#..........#........##...................................................................
.......#............................##.......#....#................................................................#.#............
.......................#......................................................#.................#.................................
.......#...................#..................................................................................................#...
.........#.....#................................#...............#........#.....................................#................#.
..#...........................#.....#..........#............................................#........#........#.#.................
...#.........#.............................#......#......................#.......................................#.......#.......#
.........................#.........#........#....................#..................#....#...#.................#..................
...............#.....................................................#....#....^............#.....................................
.......#.......#.....#.............#...........#...#..................................#...#.#....#.........................#......
.............#....................#..................................................#.........................#..................
......................................................##..........................................................................
.....................................#.....................................................................#............#..#....#.
#......................#....................#...#..................#....#.......................................#........#........
.#.....................................................................#...........................#....................##........
............#............#.........................#.........#.....................#..#........#...............................#..
.......#..#...........................................................#..#........#................#................#.............
..............................................................................................................#...................
..#............................#.....#.............#...............#..................................................#...........
..#........#..........................................................................#...........#.....##...................#....
..#.........#...................................#.................................................................................
...#.#......................#.......#...........#.........................................................#..........#............
.............#......#............#............................................................#......#............................
..............#......#...................................................................................................#........
..............#.#............................................................................#......##............................
...........#....................#...................#......#..............#.........................#.....#...#.............#.....
.................#......#................................................................................#...............#........
..#...........................................................................................#...................................
#.............#.......................#..#.....................................#..#.....#.....................#...................
.........#..#...#......#.......#................................#..............#.........#..........................#......#......
.....##...........#................................................................................................#..........#...
.#.........#....................................................##.............................#...#.........#....................
............#...............................#.#...............................................#...............................#...
...............................#..................#...........................#..............................................#....
.#..........#....#.............#.....#.....................#.....................#...................#.........................#..
.............................................................#................##..............#...................#...............
..........................##.........#................................................................................#...........
........#..#...........................#...................................................................#......................
..#.....#...................................................................#.....#....#..#.......#.......#.....#.....#...........
....................................#.......#....#......................................#........................#...........#....
...............#..............#.................#...............#....#....................................................#.......
....#..................#..........................................................................#.......#..........#............
..#...................................................#...............#...............................#......#................#...
.......#............#............................#.......................................#...#....................##..............
...............................#.......#................................#..............#....................#.....................
...........................#..............................................#..........................................#.#..#.......
....#........#....................#...........................................................................................#...
#..................#.....................#....................................#.#............#...................#................
....#........#...#............................#...#.......................#...............#........#....#.........................
.............................................................................................#....#...............#..#............
.........#..........#...........................................................#.#........................#..................#...
.....................................#................#.........#.#..........##......................#..#.........................
.....#..#.....................................................................#.#................................##...............
...............................#....#.#..................................................#.#.........................#........#...
#.......................................##.....#..........................#..#....................#.........#..........#..........
......#.#.............#....##...................................................................#................#....#......#....
..................#...#........................................#........................................#...#.....................
....................#...#...........##...................#..#....#.............................#......#............#..............
.........#.........................................................................#..........#...................................
......................................#...................................................................#.#.#..................#
.......#...#.....#........#..............#................#.........................#.#...........#.#.............#.......#.......
...#.................#......#...........#.............#.....................................#.....................................
.#...........................................................................................................#....................
............#..........#.......................#...........................................................................#....#.
......#....#...#.........................#......#......................##....#.......#.....................#....#.................
....................................#..........................#.......#.......#......................................#........##.
...................#..................................................................................#..............#.#..........
....#..........................#.....................#.#.........#...#......#..#....#.............................................
..................#......#................#........................................#...#........#.................................
...............................#.........#..................................................#.....................................
..................#..............................................#...............#...........#..#.................................
...........................#........................................................#........#....................................
.................#.......#.........##.............#...#....#......................#.......#.......................................
...........#...............#........................................................................#.#...........................
...........#..........#..........................#.....................#....#.........#...................##...#.........#........
.......#.............#........#...........................................#.................................................#.#...
.....................#..................................#.#......#...................#.........................#...#....#..##.....
.......#...................#.............#..#..................................................................#..................
..#........#........................#............#..#...#...........................#......................................#.#....
.............................#..#.......#.........#.....................................................................##...#....
..............##................#........................#..................................................#.....#...#...........
.............#..............#......#..............................................................#...................#...........
#...#............#...........##.............#..........................................#..........................................
..........................#.....#...................#....................#................#.......................................
.....................................................#..................................................................#...#.....
..................#.#........#....#.#.#..#...............................................#.....###..#.........................#...
.#...#.........#..........#.......................................................................#.#............#............#...
...#..............................#.............................#.#............................................#..................
#................................................#..#..........................................................#...............#.#
........................................#.............#..............#...............#.........#...#..............................
..............................#.................#..................#................#.....#.......#..........#....................
............#.......#...........#.........................................................................................#.......
#.#..............................#................#.#...................#.....................#.....................#......#......
.....#..#.......##...........................................#............................#.......................................
.......#..#..#.........#..........................#.#....#..........................#...#........................#.....#.........."""
